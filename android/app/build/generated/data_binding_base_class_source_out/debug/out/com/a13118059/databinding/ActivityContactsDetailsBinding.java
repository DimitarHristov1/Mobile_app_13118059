// Generated by view binder compiler. Do not edit!
package com.a13118059.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ListView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.a13118059.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityContactsDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-v26/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final ListView contactList;

  @NonNull
  public final ImageButton returnButton;

  private ActivityContactsDetailsBinding(@NonNull LinearLayout rootView,
      @Nullable ListView contactList, @NonNull ImageButton returnButton) {
    this.rootView = rootView;
    this.contactList = contactList;
    this.returnButton = returnButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityContactsDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityContactsDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_contacts_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityContactsDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.contact_list;
      ListView contactList = ViewBindings.findChildViewById(rootView, id);

      id = R.id.return_button;
      ImageButton returnButton = ViewBindings.findChildViewById(rootView, id);
      if (returnButton == null) {
        break missingId;
      }

      return new ActivityContactsDetailsBinding((LinearLayout) rootView, contactList, returnButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
